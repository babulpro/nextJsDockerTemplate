// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Example User model for MongoDB
 
 model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  password  String
  roles     String[]  @default(["RENT"])
  phone     String?
  address   String?
  
  posts     Post[]
  booking Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 }


// Example Post model for MongoDB
model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  description String?
  rentPrice  Float
  currency   String   @default("USD")
  city      String
  address   String
  images    String[]
  contactNumber String?
  published Boolean  @default(true)
  availableFrom DateTime
  availableTo   DateTime
  bookings  Booking[]

  user    User     @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  status    BookingStatus   @default(PENDING) // PENDING, CONFIRMED, CANCELLED
  startDate DateTime
  endDate   DateTime
  proposedPrice Float
  message   String?
  userId    String   @db.ObjectId 
  postId    String   @db.ObjectId 

  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum BookingStatus {
  PENDING
  CONFIRMED
  REJECTED
  CANCELLED
}